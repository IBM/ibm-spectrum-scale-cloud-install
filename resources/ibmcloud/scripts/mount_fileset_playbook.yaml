---
- name: mount filesets
  hosts: scale_nodes
  tasks:
  - name: Run shell command to extract last character
    shell: "echo {{ ansible_hostname }} | awk '{print substr($0, length, 1)}'"
    register: last_char_result

  - name: Display the result
    debug:
      var: last_char_result.stdout

  - name: Index of client node
    set_fact:
      client_node_index: "{{ last_char_result.stdout | int - 1 }}"

  - name: Display the client node index
    debug:
      msg: "Client Node Index is {{ client_node_index }}"

  - name: Calculate protocol node index modulo
    set_fact:
      proto_node_index: "{{ client_node_index | int % proto_nodes | length }}"

  - name: Display the protocol node index
    debug:
      msg: "Protocol Node Index is: {{ proto_node_index }}"

  - name: Set Protocol Node
    set_fact:
      protocol_node: "{{ proto_nodes[proto_node_index|int] }}"

  - name: Print Client and Protocol Node
    debug:
      msg: "Protocol Node: {{ protocol_node }}"

  - name: Run the mount command and check for the mount
    shell: mount | grep -w {{ item }}
    register: mount_output
    loop: "{{ custom_file_share }}"
    ignore_errors: true
    failed_when: mount_output.rc == 2

  - name: Display the result mount points
    debug:
      msg: |
        {% if item.stdout_lines %}
          Mount Points found for: {{ item.item }}:
          {{ item.stdout }}
        {% else %}
          Mount not found for {{ item.item }}
        {% endif %}
    loop: "{{ mount_output.results }}"

  - name: Check if the directory exists
    stat:
      path: "{{ item }}"
    register: dir_stat
    loop: "{{ custom_file_share }}"

  - name: Display the result if dir exists
    debug:
      msg: "Mount Dir Exists or not: {{ item.stat.exists }}"
    loop: "{{ dir_stat.results }}"

  - name: Delete the directory if it exists and is not mounted
    shell: rm -rf "{{ item.0.stat.path }}"
    register: deleted_dir
    with_together:
      - "{{ dir_stat.results }}"
      - "{{ mount_output.results }}"
    when: item.0.stat.exists == true and item.1.stdout_lines == []

  - name: Create the directory if it is not mounted
    shell: mkdir -p "{{ item.item }}"
    register: dir_created
    loop: "{{ mount_output.results }}"
    when: item.stdout_lines == []

  - name: Mount NFS filesets
    shell: "mount -t nfs -o sec=sys,vers=4.1 {{ protocol_node }}:/gpfs/fs1/{{ item.0 }} {{ item.1.item }} -vv"
    register: mounted_filesets
    with_together:
      - "{{ list_of_fileset }}"
      - "{{ mount_output.results }}"
    when: item.1.stdout_lines == []
